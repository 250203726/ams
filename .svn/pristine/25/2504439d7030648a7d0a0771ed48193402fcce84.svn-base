package com.ams.system.action;

import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ams.system.entity.Urlfilter;
import com.ams.system.model.UrlFilterModel;
import com.ams.system.service.UrlfilterService;
import com.core.action.BaseAction;
import com.core.model.OutputMessage;
import com.util.enums.PageSizeEnum;
import com.util.enums.dic.StateEnum;
import com.util.json.JackJsonUtils;
import com.util.load.UrlFilterTranslate;
import com.util.page.Pager;
import com.util.page.PagerHelper;

/**
 * url请求过滤
 * @author Wymann
 * @Data 2015-1-5 下午01:55:21
 *
 */
@Controller
public class urlFilterAction extends BaseAction{

	private static final long serialVersionUID = 6380247259096452768L;
	
	@Resource
	private UrlfilterService urlfilterService;
	
	/**
	 * 新增url
	 * @return
	 */
	@RequestMapping(value="/urlFilter/add")
	public String add(ModelMap map){
		Urlfilter url=new Urlfilter();
		url.setRowFilter(StateEnum.VALID.toString());
		url.setPrivilegess(StateEnum.VALID.toString());
		map.addAttribute("url", url);
		return SYSTEM+"urlFilterEdit";
	}
	
	/**
	 * 保存
	 * @param user
	 * @param map
	 * @return
	 */
	@RequestMapping(value="/urlFilter/save",produces="text/plain;charset=UTF-8")
	public @ResponseBody String save(Urlfilter url){
		OutputMessage msg=new OutputMessage();
		if(null!=url){
			if(StringUtils.isNotEmpty(url.getUrlId())){//修改
				Urlfilter model=urlfilterService.getById(url.getUrlId());
				if(null!=model){
					urlfilterService.update(url);
					msg=setOutputMessage(true, "修改成功！", url.getUrlId());
					UrlFilterTranslate.getInstance().refresh();
				}else{
					msg=setOutputMessage(false, "该url已被删除！", url.getUrlId());
				}
			}else{//保存
				if(checkUrl(url.getUrl(),"").equals("false")){//如果用户不存在
					urlfilterService.save(url);
					msg=setOutputMessage(true, "新建成功！", url.getUrlId());
					UrlFilterTranslate.getInstance().refresh();
				}else{
					msg=setOutputMessage(false, "url已存在！", url.getUrlId());
				}
			}
		}else{
			msg=setOutputMessage(false, "数据为空", "");
		}
		return JackJsonUtils.toJSon(msg);
	}
	
	/**
	 * 跳转到修改url信息
	 * @return
	 */
	@RequestMapping(value="/urlFilter/edit")
	public String toEdit(String id,ModelMap map){
		if(StringUtils.isNotEmpty(id)){
			Urlfilter url=urlfilterService.getById(id);
			map.addAttribute("url", url);
			return SYSTEM+"urlFilterEdit";
		}else{
			this.returnException("url编号不不存在，不能编辑！");
		}
		return ERROR;
	}
	
	/**
	 * 物理删除
	 * @param id
	 * @return
	 */
	@RequestMapping(value="/urlFilter/delete",produces="text/plain;charset=UTF-8")
	public @ResponseBody  String delete(String id){
		OutputMessage msg=new OutputMessage();
		if(StringUtils.isNotEmpty(id)){
			urlfilterService.delete(id);
			msg=setOutputMessage(true, "操作成功！", id);
			UrlFilterTranslate.getInstance().refresh();
		}else{
			msg=setOutputMessage(false, "操作失败，url编号为空！", id);
		}
		return JackJsonUtils.toJSon(msg);
	}
	
	/**
	 * 跳转到列表页面
	 * @return
	 */
	@RequestMapping(value="/urlFilter/toList")
	public String toList(){
		UrlFilterTranslate.getInstance().refresh();//刷新缓存
		return SYSTEM+"urlFilterList";
	}
	
	/**
	 * 列表页面
	 * @return
	 */
	@RequestMapping(value="/urlFilter/list",produces="text/plain;charset=UTF-8")
	public @ResponseBody String list(UrlFilterModel model){
		Pager page=PagerHelper.getInstance(this.request, PageSizeEnum.MIDDLE);
		List<UrlFilterModel> urlList=urlfilterService.findByCondition(model, page);
		page.setRows(urlList);
		return JackJsonUtils.toJSon(page);
	}
	
	/**
	 * 检查用户名是否存在
	 * @param userName
	 * @return
	 */
	@RequestMapping(value="/urlfilter/check")
	public @ResponseBody String checkUrl(String url,String id){
		boolean flag=false;
		flag=urlfilterService.checkUrl(url,id);
		return String.valueOf(flag);
	}

}
