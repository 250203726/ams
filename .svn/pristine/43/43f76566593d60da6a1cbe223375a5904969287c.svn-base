package com.ams.assetmanage.assetnam.dao.impl;

import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.stereotype.Repository;

import com.ams.BaseConst;
import com.ams.assetmanage.assetnam.dao.AssetnamDao;
import com.ams.assetmanage.assetnam.entity.Assetnam;
import com.core.dao.impl.BaseDaoImpl;
import com.util.page.Pager;

/**
 * 资产名称管理
 * 
 * @author 
 * @Data 
 * 
 */
@Repository
public class AssetnamDaoImpl extends BaseDaoImpl<Assetnam> implements AssetnamDao {

	/**
	 * 条件查询
	 * 
	 * @param model
	 * @param page
	 * @return
	 */
	public List<Assetnam> findByCondition(Assetnam model, Pager page) {
		log.info("资产名称管理条件查询...");
		try {
			StringBuffer sql = new StringBuffer();
			sql.append("select a.assetnameId, ");
			sql.append("       a.assetName, ");
			sql.append("       a.assetType, ");
			sql.append("       b.Name as assetType ");
			sql.append("  from t_assetname a ");
			sql.append(" where 1 = 1 ");
			if (StringUtils.isNotEmpty(model.getassetName())) {
				sql.append("   and a.assetName like '%"
						+ model.getassetName() + "%' ");
			}
			if (StringUtils.isNotEmpty(model.getassetType())) {
				sql.append("   and a.assetType = '" + model.getassetType()
						+ "' ");
			}
			sql.append(" order by a.assetType asc, a.assetName asc ");

			return jdbcQuery(sql.toString(), page, Assetnam.class);
		} catch (RuntimeException e) {
			log.error("资产名称管理条件查询失败，请检查！", e);
			throw e;
		}
	}

	/**
	 * 检查当前资产名称是否存在
	 * 
	 * @param name
	 * @param id
	 * @return
	 */
	public List<Assetnam> checkAssetnam(String name, String id) {
		log.info("检查当前资产名称是否存在...");
		try {
			StringBuffer sql = new StringBuffer();
			sql.append("select a.* ");
			sql.append("  from t_ assetname ");
			sql.append(" where a.assetName = '" + name + "' ");
			if (StringUtils.isNotEmpty(id)) {
				sql.append("   and a.assetnameId != '" + id + "' ");
			}
			sql.append(" limit 1 ");

			return getJdbcTemplate().query(sql.toString(),
					new BeanPropertyRowMapper<Assetnam>(Assetnam.class));
		} catch (RuntimeException e) {
			log.error("检查当前资产名称是否存在失败，请检查！", e);
			throw e;
		}
	}

	/**
	 * 根据资产名获取资产名称信息
	 * 
	 * @param name
	 * @return
	 */
	public Assetnam getByName(String name) {
		log.info("根据资产名称获取资产名称信息...");
		try {
			StringBuffer sql = new StringBuffer();
			sql.append("select a.* ");
			sql.append("  from t_assetname a ");
			sql.append(" where a.assetName = '" + name + "' ");
			sql.append(" limit 1 ");
			List<Assetnam> list = getJdbcTemplate().query(sql.toString(),
					new BeanPropertyRowMapper<Assetnam>(Assetnam.class));
			if (!list.isEmpty() && list.size() > 0) {
				return list.get(0);
			}
			return null;
		} catch (RuntimeException e) {
			log.error("根据资产名获取资产名称信息失败，请检查！", e);
			throw e;
		}
	}

}
